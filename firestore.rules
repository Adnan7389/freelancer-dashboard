rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Feedback collection rules
    match /feedback/{feedbackId} {
      // Allow read access to admins or the feedback owner
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
        resource.data.userId == request.auth.uid
      );
      
      // Allow users to create feedback
      allow create: if request.auth != null && 
        request.resource.data.rating is number &&
        request.resource.data.rating >= 1 &&
        request.resource.data.rating <= 5 &&
        request.resource.data.type is string &&
        request.resource.data.type.matches('^(bug|feature|general)$') &&
        request.resource.data.comment is string &&
        request.resource.data.comment.size() > 0 &&
        request.resource.data.comment.size() <= 2000 &&
        request.resource.data.email is string &&
        request.resource.data.email.matches('^[^@]+@[^@]+\\.[^@]+$') &&
        request.resource.data.requiresFollowUp is bool &&
        request.resource.data.userId == request.auth.uid;
        
      // Only admins can update or delete feedback
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Fallback rules (temporary, for development)
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 8, 31);
    }
  }
}